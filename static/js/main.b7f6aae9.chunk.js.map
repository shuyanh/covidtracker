{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid19.jpg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","diffConfirmedArray","i","length","push","diffDeathArray","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","key","App","state","fetchedData","setState","this","image","src","covidImage","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7f6aae9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport styles from './Cards.module.css';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\tconsole.log();\n\tif (!confirmed) {\n\t\treturn 'Loading... ';\n\t}\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid container spacing={3} justify='center'>\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tclassName={cx(styles.card, styles.infected)}\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color='textSecondary' gutterBottom>\n\t\t\t\t\t\t\tInfected\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant='h5'>\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\t\tend={confirmed.value}\n\t\t\t\t\t\t\t\tduration={2.5}\n\t\t\t\t\t\t\t\tseparator=','\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color='textSecondary'>\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant='body2'>\n\t\t\t\t\t\t\tNumber of active cases of COVID-19\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tclassName={cx(styles.card, styles.recovered)}\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color='textSecondary' gutterBottom>\n\t\t\t\t\t\t\tRecovered\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant='h5'>\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\t\tend={recovered.value}\n\t\t\t\t\t\t\t\tduration={0.5}\n\t\t\t\t\t\t\t\tseparator=','\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color='textSecondary'>\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant='body2'>\n\t\t\t\t\t\t\tNumber of recoveries from COVID-19\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tclassName={cx(styles.card, styles.deaths)}\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color='textSecondary' gutterBottom>\n\t\t\t\t\t\t\tDeaths\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant='h5'>\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\t\tend={deaths.value}\n\t\t\t\t\t\t\t\tduration={2.5}\n\t\t\t\t\t\t\t\tseparator=','\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color='textSecondary'>\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant='body2'>\n\t\t\t\t\t\t\tNumber of deaths caused by COVID-19\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n\tlet changeableUrl = url;\n\n\tif (country) {\n\t\tchangeableUrl = `${url}/countries/${country}`;\n\t}\n\ttry {\n\t\tconst {\n\t\t\tdata: { confirmed, recovered, deaths, lastUpdate },\n\t\t} = await axios.get(changeableUrl);\n\n\t\tconst modifiedData = {\n\t\t\tconfirmed,\n\t\t\trecovered,\n\t\t\tdeaths,\n\t\t\tlastUpdate,\n\t\t};\n\t\t//console.log(response.data)\n\t\treturn modifiedData;\n\t} catch (error) {}\n};\n\nexport const fetchDailyData = async () => {\n\ttry {\n\t\tconst { data } = await axios.get(`${url}/daily`);\n\t\t// console.log(response);\n\t\tconst modifiedData = data.map((dailyData) => ({\n\t\t\tconfirmed: dailyData.confirmed.total,\n\t\t\tdeaths: dailyData.deaths.total,\n\t\t\tdate: dailyData.reportDate,\n\t\t}));\n\t\t// console.log('modified daily data: ', modifiedData);\n\t\treturn modifiedData;\n\t} catch (error) {}\n};\n\nexport const fetchCountries = async () => {\n\ttry {\n\t\tconst {\n\t\t\tdata: { countries },\n\t\t} = await axios.get(`${url}/countries`);\n\t\treturn countries.map((country) => country.name);\n\t} catch (error) {}\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n\tconst [dailyData, setDailyData] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetDailyData(await fetchDailyData());\n\t\t};\n\t\t// console.log(dailyData);\n\t\tfetchAPI();\n\t}, []);\n\n\tconsole.log(dailyData);\n\n\tlet diffConfirmedArray = [];\n\tfor (let i = 0; i < dailyData.length; i++) {\n\t\tif (i === 0) {\n\t\t\tdiffConfirmedArray.push(0);\n\t\t} else {\n\t\t\tdiffConfirmedArray.push(\n\t\t\t\tdailyData[i].confirmed - dailyData[i - 1].confirmed\n\t\t\t);\n\t\t}\n\t}\n\n\tlet diffDeathArray = [];\n\tfor (let i = 0; i < dailyData.length; i++) {\n\t\tif (i === 0) {\n\t\t\tdiffDeathArray.push(0);\n\t\t} else {\n\t\t\tdiffDeathArray.push(dailyData[i].deaths - dailyData[i - 1].deaths);\n\t\t}\n\t}\n\n\tconsole.log(diffConfirmedArray);\n\n\tconst lineChart = dailyData.length ? (\n\t\t<Line\n\t\t\tdata={{\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\n\t\t\t\t\t\tlabel: 'Infected',\n\t\t\t\t\t\tborderColor: '#3333ff',\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: diffConfirmedArray,\n\t\t\t\t\t\tlabel: 'Increase',\n\t\t\t\t\t\tborderColor: 'purple',\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\n\t\t\t\t\t\tlabel: 'Deaths',\n\t\t\t\t\t\tborderColor: 'red',\n\t\t\t\t\t\tbackgroundColor: 'rgba(255,0,0,0.5)',\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: diffDeathArray,\n\t\t\t\t\t\tlabel: 'Deaths increase',\n\t\t\t\t\t\tborderColor: 'orange',\n\t\t\t\t\t\tbackgroundColor: 'rgba(255,0,0,0.5)',\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\tconsole.log('confirmed for a country', confirmed);\n\n\tconst barChart = confirmed ? (\n\t\t<Bar\n\t\t\tdata={{\n\t\t\t\tlabels: ['Infected', 'Recovered', 'Deaths'],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'People',\n\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t'rgba(0, 0, 255, 0.5)',\n\t\t\t\t\t\t\t'rgba(0, 255, 0, 0.5)',\n\t\t\t\t\t\t\t'rgba(255, 0, 0, 0.5)',\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t\toptions={{\n\t\t\t\tlegend: { display: false },\n\t\t\t\ttitle: { display: true, text: `Current state in ${country}` },\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\treturn (\n\t\t<div className={styles.container}>{country ? barChart : lineChart}</div>\n\t);\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetFetchedCountries(await fetchCountries());\n\t\t};\n\n\t\tfetchAPI();\n\t}, [setFetchedCountries]);\n\n\tconsole.log(fetchedCountries);\n\treturn (\n\t\t<FormControl className={styles.formControl}>\n\t\t\t<NativeSelect\n\t\t\t\tdefaultValue=''\n\t\t\t\tonChange={(e) => handleCountryChange(e.target.value)}\n\t\t\t>\n\t\t\t\t<option value=''>Global</option>\n\t\t\t\t{fetchedCountries.map((country, i) => (\n\t\t\t\t\t<option key={i} value={country}>\n\t\t\t\t\t\t{country}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</NativeSelect>\n\t\t</FormControl>\n\t);\n};\n\nexport default CountryPicker;\n","import React, { Component } from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport covidImage from './images/covid19.jpg';\n\nclass App extends Component {\n\tstate = {\n\t\tdata: {},\n\t\tcountry: '',\n\t};\n\tasync componentDidMount() {\n\t\tconst fetchedData = await fetchData();\n\t\tconsole.log(fetchedData);\n\n\t\tthis.setState({ data: fetchedData });\n\t}\n\n\thandleCountryChange = async (country) => {\n\t\t//fetch the data\n\n\t\tconsole.log(country);\n\n\t\tconst fetchedData = await fetchData(country);\n\t\tthis.setState({ data: fetchedData, country: country });\n\t\tconsole.log('selected a country: ', fetchedData);\n\n\t\t//set teh state\n\t};\n\trender() {\n\t\tconst { data, country } = this.state;\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<img className={styles.image} src={covidImage} alt='covid-19' />\n\t\t\t\t<Cards data={data} />\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\n\t\t\t\t<Chart data={data} country={country} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formCountrol\":\"CountryPicker_formCountrol__LE_Xm\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.d5049d72.jpg\";"],"sourceRoot":""}